ARG VERSION=8.3.4-fpm-bookworm-nginx-1.26.0
FROM dwchiang/nginx-php-fpm:${VERSION}

LABEL maintainer="Martin Goebel <mago@hsga.de>"

ARG VERSION_PHP_MINOR
ARG VERSION_OS
ENV VERSION_OS=${VERSION_OS} 

### ----------------------------------------------------------
### PHP
### ----------------------------------------------------------

RUN set -x && \
    apt-get update --allow-releaseinfo-change && \
    apt-get install --no-install-recommends --no-install-suggests -y  \
    bc libbz2-dev libfreetype6-dev libpng-dev libjpeg62-turbo-dev libzip-dev zip

RUN set -x && \
    apt-get install --no-install-recommends --no-install-suggests -y git nano procps less nodejs npm

RUN set -x && \
        docker-php-ext-configure gd --with-freetype --with-jpeg



RUN set -x && \
    docker-php-ext-install -j$(nproc) bcmath mysqli pdo pdo_mysql bz2 gd exif opcache zip

RUN set -x && \
    docker-php-source delete && \
    # php configurations
    mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini" && \
    # Memory, Time, Size Limits
    #   You can limit these at your orchestration layer.
    echo "memory_limit=2048M" > $PHP_INI_DIR/conf.d/memory-limit.ini && \
    echo "max_execution_time=900" >> $PHP_INI_DIR/conf.d/memory-limit.ini && \
    echo "post_max_size=20M" >> $PHP_INI_DIR/conf.d/memory-limit.ini && \
    echo "upload_max_filesize=20M" >> $PHP_INI_DIR/conf.d/memory-limit.ini && \
    # Time Zone
    echo "date.timezone=${PHP_TIMEZONE:-UTC}" > $PHP_INI_DIR/conf.d/date_timezone.ini && \
    # Display errors in stderr
    echo "display_errors=stderr" > $PHP_INI_DIR/conf.d/display-errors.ini && \
    # Disable PathInfo
    echo "cgi.fix_pathinfo=0" > $PHP_INI_DIR/conf.d/path-info.ini && \
    # Disable expose PHP
    echo "expose_php=0" > $PHP_INI_DIR/conf.d/path-info.ini && \
    echo "Europe/Berlin" > /etc/timezone && \
    # composer
    curl -sS https://getcomposer.org/installer | php -- --quiet --install-dir=/usr/local/bin --filename=composer && \
    # clean up
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /usr/share/nginx/html/* && \	
	sed -i -r 's/\/usr\/share\/nginx\/html\/;/\/var\/www\/html\/public\/;/' /etc/nginx/conf.d/default.conf && \
	sed -i -r 's/real_ip_recursive on;/    real_ip_recursive on;\n    access_log \/var\/log\/nginx\/access.log;\n    error_log \/var\/log\/nginx\/error.log;\n/' /etc/nginx/conf.d/default.conf

### ----------------------------------------------------------
### Load our app
### ----------------------------------------------------------

COPY . /var/www/html
COPY .env.example /var/www/html/.env

RUN set -x && \
    if [ -f "/var/www/html/composer.lock" ]; then \
        composer install --working-dir=/var/www/html ; \
    fi && \
    # resolve: The stream or file "/var/www/html/storage/logs/laravel.log" could not be opened in append mode: failed to open stream: Permission denied
    touch /var/www/html/storage/logs/laravel.log && \
    touch /var/log/cron.log && \
    # please remove this APP_KEY generate for your production usage
    #   - ref: https://tighten.co/blog/app-key-and-you/
    php artisan key:generate && \     
    chown -R www-data:www-data /usr/share/nginx/html && \
    chown -R www-data:www-data /var/www/html && \
    find /var/www/html/storage -type f -exec chmod 664 {} \; && \
    find /var/www/html/storage -type d -exec chmod 770 {} \; && \
    npm i && \
	npm run build
	#php artisan init:storage

CMD ["/docker-entrypoint.sh"]
